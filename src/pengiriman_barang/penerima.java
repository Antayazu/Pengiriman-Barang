/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pengiriman_barang;

/**
 *
 * @author Tasya
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksidb;
import java.sql.*;

public class penerima extends javax.swing.JFrame {
    private Connection conn;
    private DefaultTableModel tableModel;
    public Statement st;
    public ResultSet rs;
    /**
     * Creates new form penerima
     */
    public penerima() {
        initComponents();
        conn = koneksidb.BukaKoneksi();
        tableModel = (DefaultTableModel) tablepenerima.getModel();
        TampilData();
        
        // Tambahkan MouseListener ke tabel
        tablepenerima.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tablepenerima.getSelectedRow();
                if(row != -1) {
                    kolom1.setText(tableModel.getValueAt(row, 0).toString());
                    kolom2.setText(tableModel.getValueAt(row, 1).toString());
                    kolom3.setText(tableModel.getValueAt(row, 2).toString());
                    kolom4.setText(tableModel.getValueAt(row, 3).toString());
                }
            }
        });
    }
    private void TampilData(){
    try{
        st = conn.createStatement();
        rs = st.executeQuery("SELECT * FROM penerima");
        
        tableModel.setRowCount(0); // Clear the table model
        
        while(rs.next()){
            Object[] data = {
                rs.getString("Id_penerima"),
                rs.getString("Penerima"),
                rs.getString("Jenis_kelamin"),
                rs.getString("Alamat")
            };
            tableModel.addRow(data);
        }
    } catch(Exception e){
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablepenerima = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        kolom1 = new javax.swing.JTextField();
        kolom2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        kolom3 = new javax.swing.JTextField();
        kolom4 = new javax.swing.JTextField();
        pbhrbtn = new javax.swing.JButton();
        buatbtn = new javax.swing.JButton();
        hapusbtn = new javax.swing.JButton();
        caribtn = new javax.swing.JButton();
        pcrbox = new javax.swing.JComboBox<>();
        pencarian = new javax.swing.JTextField();
        kembalibtn = new javax.swing.JButton();
        ulangbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        tablepenerima.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Penerima", "Penerima", "Jenis Kelamin", "Alamat"
            }
        ));
        jScrollPane2.setViewportView(tablepenerima);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("FORM PENERIMA");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("ID Penerima");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Penerima");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Jenis Kelamin");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Alamat");

        kolom3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolom3ActionPerformed(evt);
            }
        });

        pbhrbtn.setText("Perbaharui");
        pbhrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbhrbtnActionPerformed(evt);
            }
        });

        buatbtn.setText("Buat");
        buatbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buatbtnActionPerformed(evt);
            }
        });

        hapusbtn.setText("Hapus");
        hapusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusbtnActionPerformed(evt);
            }
        });

        caribtn.setText("Cari");
        caribtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caribtnActionPerformed(evt);
            }
        });

        pcrbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Penerima", "Penerima", "Jenis Kelamin", "Alamat" }));
        pcrbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcrboxActionPerformed(evt);
            }
        });

        pencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pencarianActionPerformed(evt);
            }
        });

        kembalibtn.setText("Kembali");
        kembalibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembalibtnActionPerformed(evt);
            }
        });

        ulangbtn.setText("Ulang");
        ulangbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulangbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(kolom2, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                    .addComponent(kolom1))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kolom3, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(kolom4))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(caribtn)
                                .addGap(18, 18, 18)
                                .addComponent(pcrbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(499, 499, 499)
                        .addComponent(kembalibtn)))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(buatbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(pbhrbtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(hapusbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(ulangbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kolom1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(kolom3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(kolom2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(kolom4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buatbtn)
                    .addComponent(pbhrbtn)
                    .addComponent(hapusbtn)
                    .addComponent(ulangbtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(caribtn)
                    .addComponent(pcrbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(kembalibtn)
                .addGap(17, 17, 17))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/360_F_262293274_BgGtnhf3gAZJkEt5vMj88oUK5Pwjguji.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kolom3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolom3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kolom3ActionPerformed

    private void pbhrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbhrbtnActionPerformed
        if (conn == null) {
        JOptionPane.showMessageDialog(null, "Failed to connect to database!");
        return;
    }

    int row = tablepenerima.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "Pilih baris yang akan diperbarui!");
        return;
    }

    try {
        String id = kolom1.getText();
        String penerima = kolom2.getText();
        String jenis = kolom3.getText();
        String alamat = kolom4.getText();

        String query = "UPDATE penerima SET Penerima = ?, Jenis_kelamin = ?, Alamat = ? WHERE Id_penerima = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, penerima);
        pstmt.setString(2, jenis);
        pstmt.setString(3, alamat);
        pstmt.setString(4, id);
        pstmt.executeUpdate();

        // Update the table model
        tableModel.setValueAt(id, row, 0);
        tableModel.setValueAt(penerima, row, 1);
        tableModel.setValueAt(jenis, row, 2);
        tableModel.setValueAt(alamat, row, 3);
        
        TampilData(); // Refresh tabel setelah update


        JOptionPane.showMessageDialog(null, "Data berhasil diperbarui!");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }

    }//GEN-LAST:event_pbhrbtnActionPerformed

    private void buatbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buatbtnActionPerformed
        if (conn == null) {
        JOptionPane.showMessageDialog(null, "Failed to connect to database!");
        return;
    }

    try {
        String id = kolom1.getText();
        String penerima = kolom2.getText();
        String jenis = kolom3.getText();
        String alamat = kolom4.getText();

        String query = "INSERT INTO penerima (Id_penerima, Penerima, Jenis_kelamin, Alamat) VALUES (?, ?, ?, ?)";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, id);
        pstmt.setString(2, penerima);
        pstmt.setString(3, jenis);
        pstmt.setString(4, alamat);
        pstmt.executeUpdate();

        // Add the new data to the table model
        tableModel.addRow(new Object[]{id, penerima, jenis, alamat});

        // Clear the input fields
        kolom1.setText("");
        kolom2.setText("");
        kolom3.setText("");
        kolom4.setText("");
        
        TampilData(); // Refresh tabel setelah update


        JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_buatbtnActionPerformed

    private void hapusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusbtnActionPerformed
        if (conn == null) {
        JOptionPane.showMessageDialog(null, "Failed to connect to database!");
        return;
    }

    int row = tablepenerima.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "Select a row to delete!");
        return;
    }

    String id = (String) tablepenerima.getValueAt(row, 0);
    String penerima = (String) tablepenerima.getValueAt(row, 1);
    String jenis = (String) tablepenerima.getValueAt(row, 2);
    String alamat = (String) tablepenerima.getValueAt(row, 3);


    try {
        String query = "DELETE FROM penerima WHERE Id_penerima = ? AND Penerima = ? AND Jenis_kelamin = ? AND Alamat = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, id);
        pstmt.setString(2, penerima);
        pstmt.setString(3, jenis);
        pstmt.setString(4, alamat);
        pstmt.executeUpdate();

        tableModel.removeRow(row);

        TampilData(); // Call TampilData() to refresh the table

        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_hapusbtnActionPerformed

    private void caribtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caribtnActionPerformed
        if (conn == null) {
            JOptionPane.showMessageDialog(null, "Failed to connect to database!");
            return;
        }

        String selectedOption = (String) pcrbox.getSelectedItem();
        String searchValue = pencarian.getText();

        String columnName = "";
        switch (selectedOption) {
            case "ID Penerima":
                columnName = "Id_penerima";
                break;
            case "Penerima":
                columnName = "Penerima";
                break;
            case "Jenis Kelamin":
                columnName = "Jenis_kelamin";
                break;
            case "Alamat":
                columnName = "Alamat";
                break;
            default:
                JOptionPane.showMessageDialog(null, "Invalid option selected!");
                return;
        }

        try {
            String query = "SELECT * FROM penerima WHERE " + columnName + " LIKE ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, "%" + searchValue + "%");
            ResultSet rs = pstmt.executeQuery();

            tableModel.setRowCount(0); // Clear the table model

            if (rs.next()) { // Check if rs has any rows
                do {
                    Object[] data = {
                        rs.getString("Id_penerima"),
                        rs.getString("Penerima"),
                        rs.getString("Jenis_kelamin"),
                        rs.getString("Alamat")
                    };
                    tableModel.addRow(data);
                } while (rs.next()); // Use do-while loop to iterate over rs
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_caribtnActionPerformed

    private void pcrboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcrboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcrboxActionPerformed

    private void pencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pencarianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pencarianActionPerformed

    private void kembalibtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembalibtnActionPerformed
       halaman_utama halaman_utamaForm = new halaman_utama();
       halaman_utamaForm.setVisible(true);
       this.dispose(); // close the current form
    }//GEN-LAST:event_kembalibtnActionPerformed

    private void ulangbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulangbtnActionPerformed
        kolom1.setText("");
        kolom2.setText("");
        kolom3.setText("");
        kolom4.setText("");
    }//GEN-LAST:event_ulangbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(penerima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(penerima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(penerima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(penerima.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new penerima().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buatbtn;
    private javax.swing.JButton caribtn;
    private javax.swing.JButton hapusbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton kembalibtn;
    private javax.swing.JTextField kolom1;
    private javax.swing.JTextField kolom2;
    private javax.swing.JTextField kolom3;
    private javax.swing.JTextField kolom4;
    private javax.swing.JButton pbhrbtn;
    private javax.swing.JComboBox<String> pcrbox;
    private javax.swing.JTextField pencarian;
    private javax.swing.JTable tablepenerima;
    private javax.swing.JButton ulangbtn;
    // End of variables declaration//GEN-END:variables
}
