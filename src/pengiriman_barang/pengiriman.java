/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pengiriman_barang;

/**
 *
 * @author Tasya
 */
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksidb;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class pengiriman extends javax.swing.JFrame {
    private Connection conn;
    private DefaultTableModel tableModel;
    public Statement st;
    public ResultSet rs;
    /**
     * Creates new form pengiriman
     */
    public pengiriman() {
        initComponents();
        conn = koneksidb.BukaKoneksi();
        tableModel = (DefaultTableModel) tablepengiriman.getModel();
        TampilData();
        
        tablepengiriman.addMouseListener(new java.awt.event.MouseAdapter() {
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int row = tablepengiriman.getSelectedRow();
        if(row != -1) {
            String idPengiriman = tableModel.getValueAt(row, 0).toString();
            kolomidp.setText(idPengiriman);
            kolomt.setText(tableModel.getValueAt(row, 1).toString());
            kolomnk.setText(tableModel.getValueAt(row, 2).toString());
            kolomnpn.setText(tableModel.getValueAt(row, 3).toString());
            koloma.setText(tableModel.getValueAt(row, 4).toString());
            kolombr.setText(tableModel.getValueAt(row, 5).toString());
            
            // Tambahkan kode untuk mengambil data tambahan dari database
            try {
                String query = "SELECT Id_kurir, Id_penerima, Barang, Total_harga FROM pengiriman WHERE Id_pengiriman = ?";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, idPengiriman);
                ResultSet rs = pstmt.executeQuery();
                
                if(rs.next()) {
                    kolomidk.setText(rs.getString("Id_kurir"));
                    kolomidpn.setText(rs.getString("Id_penerima"));
                    kolomb.setText(rs.getString("Barang"));
                    kolomth.setText(rs.getString("Total_harga"));
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
            }
        }
    }
});
    }
    private void TampilData(){
        try{
            st = conn.createStatement();
            rs = st.executeQuery("SELECT*FROM pengiriman");
            
            tableModel.setRowCount(0); // Clear the table model
            
           
            while(rs.next()){
                Object[] data={
                rs.getString("Id_pengiriman"),
                rs.getString("Tanggal"),
                rs.getString("Nama_kurir"),
                rs.getString("Nama_penerima"),
                rs.getString("Alamat"),
                rs.getInt("Berat"),
                };
            tableModel.addRow(data);
            }
        }catch(Exception e){
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablepengiriman = new javax.swing.JTable();
        pbhrbtn = new javax.swing.JButton();
        buatbtn = new javax.swing.JButton();
        hapusbtn = new javax.swing.JButton();
        caribtn = new javax.swing.JButton();
        pcrbox = new javax.swing.JComboBox<>();
        pencarian = new javax.swing.JTextField();
        kembalibtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        carikbtn = new javax.swing.JButton();
        caripbtn = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        caribbtn = new javax.swing.JButton();
        kolomidp = new javax.swing.JTextField();
        kolomt = new javax.swing.JTextField();
        kolomidk = new javax.swing.JTextField();
        kolomnk = new javax.swing.JTextField();
        kolomidpn = new javax.swing.JTextField();
        kolomnpn = new javax.swing.JTextField();
        koloma = new javax.swing.JTextField();
        kolomb = new javax.swing.JTextField();
        kolombr = new javax.swing.JTextField();
        kolomth = new javax.swing.JTextField();
        ulangbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel2.setText("FORM PENGIRIMAN");

        tablepengiriman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Pengiriman", "Tanggal", "Nama Kurir", "Nama Penerima", "Alamat", "Berat"
            }
        ));
        jScrollPane1.setViewportView(tablepengiriman);

        pbhrbtn.setText("Perbaharui");
        pbhrbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pbhrbtnActionPerformed(evt);
            }
        });

        buatbtn.setText("Buat");
        buatbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buatbtnActionPerformed(evt);
            }
        });

        hapusbtn.setText("Hapus");
        hapusbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusbtnActionPerformed(evt);
            }
        });

        caribtn.setText("Cari");
        caribtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caribtnActionPerformed(evt);
            }
        });

        pcrbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID Pengiriman", "Tanggal", "Nama Kurir", "Nama Penerima", "Jumlah", "Berat" }));
        pcrbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pcrboxActionPerformed(evt);
            }
        });

        pencarian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pencarianActionPerformed(evt);
            }
        });

        kembalibtn.setText("Kembali");
        kembalibtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembalibtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("ID Pengiriman");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("ID Kurir");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Nama Kurir");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("ID Penerima");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Nama Penerima");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Alamat");

        carikbtn.setText("Cari");
        carikbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carikbtnActionPerformed(evt);
            }
        });

        caripbtn.setText("Cari");
        caripbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caripbtnActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Tanggal");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Barang");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Berat");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Total Harga");

        caribbtn.setText("Cari");
        caribbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                caribbtnActionPerformed(evt);
            }
        });

        kolomt.setText("yy-mm-dd");

        kolomidk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomidkActionPerformed(evt);
            }
        });

        kolomnk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomnkActionPerformed(evt);
            }
        });

        koloma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kolomaActionPerformed(evt);
            }
        });

        ulangbtn.setText("Ulang");
        ulangbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulangbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(kembalibtn)
                .addGap(39, 39, 39))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(kolomidk, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(carikbtn)
                                .addGap(25, 25, 25)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel8)))
                            .addComponent(kolomnpn, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(koloma)
                                    .addComponent(kolomb)
                                    .addComponent(kolombr)
                                    .addComponent(kolomth, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(caribbtn))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buatbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pbhrbtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hapusbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ulangbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(jLabel4))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kolomt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(kolomidp, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(kolomnk)
                                    .addComponent(kolomidpn, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addComponent(caripbtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(caribtn)
                        .addGap(43, 43, 43)
                        .addComponent(pcrbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabel2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8)
                    .addComponent(kolomidp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(koloma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(caribbtn)
                        .addComponent(jLabel10)
                        .addComponent(kolomt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kolomb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel11)
                            .addComponent(kolomidk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(carikbtn)
                            .addComponent(kolombr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kolomnk, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jLabel12)
                                .addComponent(kolomth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(101, 101, 101)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(caripbtn)
                            .addComponent(kolomidpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buatbtn)
                            .addComponent(pbhrbtn)
                            .addComponent(hapusbtn)
                            .addComponent(jLabel7)
                            .addComponent(kolomnpn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ulangbtn))
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(caribtn)
                            .addComponent(pcrbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pencarian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kembalibtn)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/360_F_262293274_BgGtnhf3gAZJkEt5vMj88oUK5Pwjguji.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void pbhrbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pbhrbtnActionPerformed
        if (conn == null) {
            JOptionPane.showMessageDialog(null, "Failed to connect to database!");
            return;
        }

        int row = tablepengiriman.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Pilih baris yang akan diperbarui!");
            return;
        }

        try {
            String idpengiriman = kolomidp.getText();
            String tanggal = kolomt.getText();
            String namakurir = kolomnk.getText();
            String namapenerima = kolomnpn.getText();
            String alamat = koloma.getText();
            int berat = Integer.parseInt(kolombr.getText());
            String idkurir = kolomidk.getText();
            String idpenerima = kolomidpn.getText();
            String barang = kolomb.getText();
            String totalharga = kolomth.getText();

            String query = "UPDATE pengiriman SET Tanggal = ?, Nama_kurir = ?, Nama_penerima = ?, Alamat = ?, Berat = ?, Id_kurir = ?, Id_penerima = ?, Barang = ?, Total_harga = ? WHERE Id_pengiriman = ?";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, tanggal);
            pstmt.setString(2, namakurir);
            pstmt.setString(3, namapenerima);
            pstmt.setString(4, alamat);
            pstmt.setInt(5, berat);
            pstmt.setString(6, idkurir);
            pstmt.setString(7, idpenerima);
            pstmt.setString(8, barang);
            pstmt.setString(9, totalharga);
            pstmt.setString(10, idpengiriman);
            pstmt.executeUpdate();

            TampilData();

            JOptionPane.showMessageDialog(null, "Data berhasil diperbarui!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Berat harus berupa angka!");
        }
    }//GEN-LAST:event_pbhrbtnActionPerformed

    private void buatbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buatbtnActionPerformed
        if (conn == null) {
            JOptionPane.showMessageDialog(null, "Failed to connect to database!");
            return;
        }

        try {
            String idpengiriman = kolomidp.getText();
            String tanggal = kolomt.getText();
            String namakurir = kolomnk.getText();
            String namapenerima = kolomnpn.getText();
            String alamat = koloma.getText();
            int berat = Integer.parseInt(kolombr.getText());
            String idkurir = kolomidk.getText();
            String idpenerima = kolomidpn.getText();
            String barang = kolomb.getText();
            String totalharga = kolomth.getText();

            String query = "INSERT INTO pengiriman (Id_pengiriman, Tanggal, Nama_Kurir, Nama_penerima, Alamat, Berat, Id_kurir, Id_penerima, Barang, Total_harga) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, idpengiriman);
            pstmt.setString(2, tanggal);
            pstmt.setString(3, namakurir);
            pstmt.setString(4, namapenerima);
            pstmt.setString(5, alamat);
            pstmt.setInt(6, berat);
            pstmt.setString(7, idkurir);
            pstmt.setString(8, idpenerima);
            pstmt.setString(9, barang);
            pstmt.setString(10, totalharga);
            pstmt.executeUpdate();

            TampilData();

            // Clear the input fields
            kolomidp.setText("");
            kolomt.setText("");
            kolomnk.setText("");
            kolomnpn.setText("");
            koloma.setText("");
            kolombr.setText("");
            kolomidk.setText("");
            kolomidpn.setText("");
            kolomb.setText("");
            kolomth.setText("");

            JOptionPane.showMessageDialog(null, "Data berhasil disimpan!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Berat harus berupa angka!");
        }
    }//GEN-LAST:event_buatbtnActionPerformed

    private void hapusbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusbtnActionPerformed
        if (conn == null) {
        JOptionPane.showMessageDialog(null, "Failed to connect to database!");
        return;
    }

    int row = tablepengiriman.getSelectedRow();
    if (row == -1) {
        JOptionPane.showMessageDialog(null, "Select a row to delete!");
        return;
    }

    String idpengiriman = (String) tablepengiriman.getValueAt(row, 0);
    String tanggal = (String) tablepengiriman.getValueAt(row, 1);
    String namakurir = (String) tablepengiriman.getValueAt(row, 2);
    String namapenerima = (String) tablepengiriman.getValueAt(row, 3);
    String alamat = (String) tablepengiriman.getValueAt(row, 4);
    int berat = (int) tablepengiriman.getValueAt(row, 5);

    try {
        String query = "DELETE FROM pengiriman WHERE Id_pengiriman = ? AND Tanggal = ? AND Nama_kurir = ? AND Nama_penerima = ? AND Alamat = ? AND Berat = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setString(1, idpengiriman);
        pstmt.setString(2, tanggal);
        pstmt.setString(3, namakurir);
        pstmt.setString(4, namapenerima);
        pstmt.setString(5, alamat);
        pstmt.setInt(6, berat);
        pstmt.executeUpdate();

        // Remove the row from the table model
        tableModel.removeRow(row);
        
        TampilData();

        JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, e.getMessage());
    }
    }//GEN-LAST:event_hapusbtnActionPerformed

    private void kembalibtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembalibtnActionPerformed
        halaman_utama halaman_utamaForm = new halaman_utama();
        halaman_utamaForm.setVisible(true);
        this.dispose(); // close the current form
    }//GEN-LAST:event_kembalibtnActionPerformed

    private void carikbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carikbtnActionPerformed
        JDialog dialog = new JDialog(this, "Pilih Kurir", true);
        dialog.setLayout(new BorderLayout());

        JTable kurirTable = new JTable();
        DefaultTableModel model = new DefaultTableModel(new String[]{"ID Kurir", "Nama Kurir", "Jenis Kelamin"}, 0);
        kurirTable.setModel(model);

        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM kurir");
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("Id_kurir"),
                    rs.getString("Nama_kurir"),
                    rs.getString("Jenis_kelamin")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

            kurirTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int row = kurirTable.getSelectedRow();
                    String idKurir = (String) kurirTable.getValueAt(row, 0);
                    String namaKurir = (String) kurirTable.getValueAt(row, 1);
                    
                    kolomidk.setText(idKurir);
                    kolomnk.setText(namaKurir);
                    
                    dialog.dispose();
                }
            }
        });

        JScrollPane scrollPane = new JScrollPane(kurirTable);
        dialog.add(scrollPane, BorderLayout.CENTER);

        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_carikbtnActionPerformed

    private void caribtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caribtnActionPerformed
         if (conn == null) {
        JOptionPane.showMessageDialog(null, "Failed to connect to database!");
        return;
    }

    String selectedOption = (String) pcrbox.getSelectedItem();
    String searchValue = pencarian.getText();

    String columnName = "";
    switch (selectedOption) {
        case "ID Pengiriman":
            columnName = "Id_pengiriman";
            break;
        case "Tanggal":
            columnName = "Tanggal";
            break;
        case "Nama Kurir":
            columnName = "Nama_kurir";
            break;
        case "Nama Penerima":
            columnName = "Nama_penerima";
            break;
        case "Alamat":
            columnName = "Alamat";
            break;
        case "Berat":
            columnName = "Berat";
            break;
        default:
            JOptionPane.showMessageDialog(null, "Invalid option selected!");
            return;
    }

    try {
    String query = "SELECT * FROM pengiriman WHERE " + columnName + " LIKE?";
    PreparedStatement pstmt = conn.prepareStatement(query);
    pstmt.setString(1, "%" + searchValue + "%");
    ResultSet rs = pstmt.executeQuery();

    tableModel.setRowCount(0); // Clear the table model

    if (rs.next()) { // Check if rs has any rows
        do {
            Object[] data = {
                rs.getString("Id_pengiriman"),
                rs.getString("Tanggal"),
                rs.getString("Nama_kurir"),
                rs.getString("Nama_penerima"),
                rs.getString("Alamat"),
                rs.getInt("Berat")
            };
            tableModel.addRow(data);
        } while (rs.next()); // Use do-while loop to iterate over rs

        tablepengiriman.setModel(tableModel);

        JOptionPane.showMessageDialog(null, "Data berhasil dicari!");
    } else {
        JOptionPane.showMessageDialog(null, "Data tidak bisa dicari!");
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
}
    }//GEN-LAST:event_caribtnActionPerformed

    private void pcrboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pcrboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pcrboxActionPerformed

    private void pencarianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pencarianActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pencarianActionPerformed

    private void caribbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caribbtnActionPerformed
        JDialog dialog = new JDialog(this, "Pilih Penerima", true);
        dialog.setLayout(new BorderLayout());

        JTable kurirTable = new JTable();
        DefaultTableModel model = new DefaultTableModel(new String[]{"Kode", "Barang", "Jenis", "Jumlah", "Harga"}, 0);
        kurirTable.setModel(model);

        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM barang");
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("Kode_barang"),
                    rs.getString("Nama_barang"),
                    rs.getString("Jenis_barang"),
                    rs.getInt("Jumlah_barang"),
                    rs.getInt("Harga_barang"),
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

        kurirTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int row = kurirTable.getSelectedRow();
                    String nama = (String) kurirTable.getValueAt(row, 1);
                    int jumlah = (int) kurirTable.getValueAt(row, 3);
                    int harga = (int) kurirTable.getValueAt(row, 4);
                    
                    kolomb.setText(nama);
                    kolombr.setText(String.valueOf(jumlah));
                    kolomth.setText(String.valueOf(harga));

                    
                    dialog.dispose();
                }
            }
        });

        JScrollPane scrollPane = new JScrollPane(kurirTable);
        dialog.add(scrollPane, BorderLayout.CENTER);

        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_caribbtnActionPerformed

    private void kolomnkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomnkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kolomnkActionPerformed

    private void kolomidkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomidkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kolomidkActionPerformed

    private void kolomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kolomaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_kolomaActionPerformed

    private void caripbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_caripbtnActionPerformed
       JDialog dialog = new JDialog(this, "Pilih Penerima", true);
        dialog.setLayout(new BorderLayout());

        JTable kurirTable = new JTable();
        DefaultTableModel model = new DefaultTableModel(new String[]{"ID Penerima", "Nama Penerima", "Jenis Kelamin", "Alamat"}, 0);
        kurirTable.setModel(model);

        try {
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM penerima");
            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("Id_penerima"),
                    rs.getString("Penerima"),
                    rs.getString("Jenis_kelamin"),
                    rs.getString("Alamat")
                });
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }

        kurirTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int row = kurirTable.getSelectedRow();
                    String id = (String) kurirTable.getValueAt(row, 0);
                    String penerima = (String) kurirTable.getValueAt(row, 1);
                    String alamat = (String) kurirTable.getValueAt(row, 3);
                    
                    kolomidpn.setText(id);
                    kolomnpn.setText(penerima);
                    koloma.setText(alamat);

                    
                    dialog.dispose();
                }
            }
        });

        JScrollPane scrollPane = new JScrollPane(kurirTable);
        dialog.add(scrollPane, BorderLayout.CENTER);

        dialog.setSize(400, 300);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_caripbtnActionPerformed

    private void ulangbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulangbtnActionPerformed
        kolomidp.setText("");
        kolomt.setText("");
        kolomidk.setText("");
        kolomidpn.setText("");
        kolomnpn.setText("");
        koloma.setText("");
        kolomnk.setText("");
        kolombr.setText("");
        kolomb.setText("");
        kolomth.setText("");
    }//GEN-LAST:event_ulangbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pengiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pengiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pengiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pengiriman.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pengiriman().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buatbtn;
    private javax.swing.JButton caribbtn;
    private javax.swing.JButton caribtn;
    private javax.swing.JButton carikbtn;
    private javax.swing.JButton caripbtn;
    private javax.swing.JButton hapusbtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kembalibtn;
    private javax.swing.JTextField koloma;
    private javax.swing.JTextField kolomb;
    private javax.swing.JTextField kolombr;
    private javax.swing.JTextField kolomidk;
    private javax.swing.JTextField kolomidp;
    private javax.swing.JTextField kolomidpn;
    private javax.swing.JTextField kolomnk;
    private javax.swing.JTextField kolomnpn;
    private javax.swing.JTextField kolomt;
    private javax.swing.JTextField kolomth;
    private javax.swing.JButton pbhrbtn;
    private javax.swing.JComboBox<String> pcrbox;
    private javax.swing.JTextField pencarian;
    private javax.swing.JTable tablepengiriman;
    private javax.swing.JButton ulangbtn;
    // End of variables declaration//GEN-END:variables
}
